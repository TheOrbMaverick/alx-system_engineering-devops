#!/usr/bin/env bash
# Server configuration file

# Function to transfer a file from client to server using SCP
transfer_file() {
    local source_file="$1"
    local server_ip="$2"
    local username="$3"
    local ssh_key="$4"

    echo "Transferring file $source_file to $username@$server_ip..."

    scp -o StrictHostKeyChecking=no -i "$ssh_key" "$source_file" "$username"@"$server_ip":~/ || { echo "Error: File transfer failed."; exit 1; }
    echo "File transferred successfully."
}

# Function to install Nginx if not installed
install_nginx() {
    if ! command -v nginx &> /dev/null; then
        echo "Installing Nginx..."
        sudo apt update
        sudo apt install nginx -y
        echo "Nginx installed successfully."
    else
        echo "Nginx is already installed."
    fi
}

# Function to configure Nginx with custom HTTP response header
configure_nginx_header() {
    local header="add_header X-Custom-Header \"Custom Header Value\";"

    # Add header to default Nginx configuration file
    sudo sed -i '/server {/a '"$header" /etc/nginx/sites-available/default
    echo "Nginx configured with custom HTTP response header."
}

# Function to create a symbolic link between sites-available and sites-enabled
create_symbolic_link() {
    local source_file="/etc/nginx/sites-available/default"
    local destination_file="/etc/nginx/sites-enabled/default"

    if [ ! -f "$destination_file" ]; then
        sudo ln -s "$source_file" "$destination_file"
        echo "Symbolic link created between sites-available and sites-enabled."
    else
        echo "Symbolic link already exists."
    fi
}

# Function to define redirection configuration for Nginx
define_redirection() {
    local redirection_config="server {
        listen 80;
        server_name _;
        return 301 https://example.com$request_uri;
    }"

    # Backup default Nginx configuration file
    sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak

    # Add redirection configuration to Nginx
    echo "$redirection_config" | sudo tee /etc/nginx/sites-available/default >/dev/null
    echo "Redirection configuration added to Nginx."
}

# Function to test and reload Nginx to apply changes
reload_nginx() {
    sudo nginx -t && sudo systemctl reload nginx
    echo "Nginx configuration reloaded."
}

# Function to create and configure a custom error page
create_custom_error_page() {
    local error_page_content="<html><head><title>404 Not Found</title></head><body><h1>404 Not Found</h1><p>Sorry, the page you are looking for is not found.</p></body></html>"
    
    echo "$error_page_content" | sudo tee /var/www/html/404.html >/dev/null
    echo "Custom error page created."
}

# Main script

# Transfer file from client to server
transfer_file "/path/to/source/file" "server_ip" "username" "/path/to/ssh/key"

# Install Nginx if not already installed
install_nginx

# Configure Nginx with custom HTTP response header
configure_nginx_header

# Create symbolic link between sites-available and sites-enabled
create_symbolic_link

# Define redirection configuration for Nginx
define_redirection

# Test and reload Nginx to apply changes
reload_nginx

# Create and configure a custom error page
create_custom_error_page

# Reload Nginx again to apply changes
reload_nginx

echo "Configuration completed successfully."